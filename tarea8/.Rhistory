setwd("~/GitHub/Diseno_experimental/tarea8")
head(datos)
str(datos)
# Gráfico de cajas
par(mfrow=c(1,1))
boxplot(datos[,1:4],main="Diagrama de cajas",
xlab="Variables con diferentes unidades",
ylab="Puntaje",
col=c("springgreen1","yellow","tomato","pink"))
# Calculos y graficos de correlaciones
# Correlacion de Pearson
midato=cor(datos,method="pearson")
setwd("~/GitHub/Diseno_experimental/tarea8")
setwd("D:/Proyectos_GitHub/Diseno_experimental/tarea8")
datos=read.table("datos.csv", header = T,  sep=";",  dec="."     )
head(datos)
str(datos)
# Gráfico de cajas
par(mfrow=c(1,1))
boxplot(datos[,1:4],main="Diagrama de cajas",
xlab="Variables con diferentes unidades",
ylab="Puntaje",
col=c("springgreen1","yellow","tomato","pink"))
# Calculos y graficos de correlaciones
# Correlacion de Pearson
midato=cor(datos,method="pearson")
cat("Correlacion de Pearson\n")
print(midato)
# H0: Rho=0
prueba=cor.test(datos$Sabor,datos$AA,method="pearson")
print(prueba)
# De otra manera
plot(datos$AA,datos$Sabor,main="Grafica de Dispersion",col="blue")
segments(4,0,6.8,40,col="17")
cor(datos)
cor(datos)[1,2]
cor.test(datos$Sabor,datos$AA)
# Graficos de Correlacion
data2=datos
View(datos)
clear
datos=read.table("datos.csv", header = T,  sep=";",  dec="."     )
head(datos)
str(datos)
# Gráfico de cajas
par(mfrow=c(1,1))
boxplot(datos[,1:4],main="Diagrama de cajas",
xlab="Variables con diferentes unidades",
ylab="Puntaje",
col=c("springgreen1","yellow","tomato","pink"))
# Calculos y graficos de correlaciones
# Correlacion de Pearson
midato=cor(datos,method="pearson")
cat("Correlacion de Pearson\n")
print(midato)
# H0: Rho=0
prueba=cor.test(datos$Sabor,datos$AA,method="pearson")
print(prueba)
datos <- data.frame(
Concentration = c(0.0, 9.5, 23.7, 47.5, 74.3, 94.9),
Emission = c(0.000, 3114.369, 10892.702, 23051.704, 34534.168, 44575.015)
)
# Linear regression
modelo <- lm(Emission ~ Concentration, data = datos)
# Summary of the model
summary(modelo)
# Print coefficients for comparison with the article
cat("Intercept:", coef(modelo)[1], "\n")
cat("Slope:", coef(modelo)[2], "\n")
# Plot with regression line
plot(datos$Concentration, datos$Emission, main = "Calibration Curve",
xlab = "Concentration of Ti (μg/L)", ylab = "Emission intensity (cps)",
pch = 16, col = "blue")
abline(modelo, col = "red")
# Librerías necesarias
library(corrplot)
# Datos de ejemplo
datos <- data.frame(
Concentration = c(0.0, 9.5, 23.7, 47.5, 74.3, 94.9),
Emission = c(0.000, 3114.369, 10892.702, 23051.704, 34534.168, 44575.015)
)
# Función para calcular y mostrar la correlación de Pearson
calcular_correlacion <- function(datos) {
midato <- cor(datos, method = "pearson")
cat("Correlación de Pearson\n")
print(midato)
return(midato)
}
# Función para realizar la prueba de hipótesis de correlación de Pearson
prueba_correlacion <- function(datos, var1, var2) {
prueba <- cor.test(datos[[var1]], datos[[var2]], method = "pearson")
print(prueba)
}
# Función para realizar regresión lineal y mostrar los resultados
regresion_lineal <- function(datos) {
modelo <- lm(Emission ~ Concentration, data = datos)
summary(modelo)
}
# Función para gráfico de dispersión con línea de regresión
grafico_dispersion <- function(datos) {
plot(datos$Concentration, datos$Emission, main = "Gráfico de Dispersión con Línea de Regresión",
xlab = "Concentration (μg/L)", ylab = "Emission (cps)", pch = 16, col = "blue")
abline(lm(Emission ~ Concentration, data = datos), col = "red")
}
# Función para graficar la matriz de correlación
graficar_corrplot <- function(matriz_cor) {
corrplot(matriz_cor, sig.level = 0.05, type = "lower")
}
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
prueba_correlacion(datos, "Concentration", "Emission")  # Prueba de correlación entre Concentration y Emission
regresion_lineal(datos)                      # Resumen de la regresión lineal
grafico_dispersion(datos)                    # Gráfico de dispersión con línea de regresión
graficar_corrplot(matriz_cor)                # Gráfico de correlación
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
prueba_correlacion(datos, "Concentration", "Emission")  # Prueba de correlación entre Concentration y Emission
regresion_lineal(datos)                      # Resumen de la regresión lineal
grafico_dispersion(datos)                    # Gráfico de dispersión con línea de regresión
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
prueba_correlacion(datos, "Concentration", "Emission")  # Prueba de correlación entre Concentration y Emission
regresion_lineal(datos)                      # Resumen de la regresión lineal
grafico_dispersion(datos)                    # Gráfico de dispersión con línea de regresión
graficar_corrplot(matriz_cor)                # Gráfico de correlación
setwd("~/GitHub/Diseno_experimental/tarea8")
setwd("D:/Proyectos_GitHub/Diseno_experimental/tarea8")
datos=read.table("datos.csv", header = T,  sep=";",  dec="."     )
head(datos)
str(datos)
# Gráfico de cajas
par(mfrow=c(1,1))
boxplot(datos[,1:4],main="Diagrama de cajas",
xlab="Variables con diferentes unidades",
ylab="Puntaje",
col=c("springgreen1","yellow","tomato","pink"))
# Calculos y graficos de correlaciones
# Correlacion de Pearson
midato=cor(datos,method="pearson")
cat("Correlacion de Pearson\n")
print(midato)
# H0: Rho=0
prueba=cor.test(datos$Sabor,datos$AA,method="pearson")
print(prueba)
# De otra manera
plot(datos$AA,datos$Sabor,main="Grafica de Dispersion",col="blue")
segments(4,0,6.8,40,col="17")
cor(datos)
cor(datos)[1,2]
cor.test(datos$Sabor,datos$AA)
# Graficos de Correlacion
data2=datos
library(corrplot)
i=cor(data2,method="pearson")
corrplot(i,sig.level=0.05,type="lower")
# Función para graficar la matriz de correlación con valores de correlación
graficar_corrplot <- function(matriz_cor) {
corrplot(matriz_cor, sig.level = 0.05, type = "lower",
addCoef.col = "black")  # Agrega los valores de correlación en negro
}
graficar_corrplot(matriz_cor)                # Gráfico de correlación
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
matriz_cor
# Librerías necesarias
library(corrplot)
# Datos de ejemplo
datos <- data.frame(
Concentration = c(0.0, 9.5, 23.7, 47.5, 74.3, 94.9),
Emission = c(0.000, 3114.369, 10892.702, 23051.704, 34534.168, 44575.015)
)
# Función para calcular y mostrar la correlación de Pearson
calcular_correlacion <- function(datos) {
midato <- cor(datos, method = "pearson")
cat("Correlación de Pearson\n")
print(midato)
return(midato)
}
# Función para realizar la prueba de hipótesis de correlación de Pearson
prueba_correlacion <- function(datos, var1, var2) {
prueba <- cor.test(datos[[var1]], datos[[var2]], method = "pearson")
print(prueba)
}
# Función para realizar regresión lineal y mostrar los resultados
regresion_lineal <- function(datos) {
modelo <- lm(Emission ~ Concentration, data = datos)
summary(modelo)
}
# Función para gráfico de dispersión con línea de regresión
grafico_dispersion <- function(datos) {
plot(datos$Concentration, datos$Emission, main = "Gráfico de Dispersión con Línea de Regresión",
xlab = "Concentration (μg/L)", ylab = "Emission (cps)", pch = 16, col = "blue")
abline(lm(Emission ~ Concentration, data = datos), col = "red")
}
# Función para graficar la matriz de correlación con valores de correlación
graficar_corrplot <- function(matriz_cor) {
corrplot(matriz_cor, sig.level = 0.05, type = "lower",
addCoef.col = "black")  # Agrega los valores de correlación en negro
}
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
prueba_correlacion(datos, "Concentration", "Emission")  # Prueba de correlación entre Concentration y Emission
regresion_lineal(datos)                      # Resumen de la regresión lineal
grafico_dispersion(datos)                    # Gráfico de dispersión con línea de regresión
graficar_corrplot(matriz_cor)                # Gráfico de correlación
graficar_corrplot(matriz_cor)                # Gráfico de correlación
# Datos de ejemplo
datos <- data.frame(
Concentration = c(0.0, 9.5, 23.7, 47.5, 74.3, 94.9),
Emission = c(0.000, 3114.369, 10892.702, 23051.704, 34534.168, 44575.015)
)
# Función para calcular y mostrar la correlación de Pearson
calcular_correlacion <- function(datos) {
midato <- cor(datos, method = "pearson")
cat("Correlación de Pearson\n")
print(midato)
return(midato)
}
# Función para realizar la prueba de hipótesis de correlación de Pearson
prueba_correlacion <- function(datos, var1, var2) {
prueba <- cor.test(datos[[var1]], datos[[var2]], method = "pearson")
print(prueba)
}
# Función para realizar regresión lineal y mostrar los resultados
regresion_lineal <- function(datos) {
modelo <- lm(Emission ~ Concentration, data = datos)
summary(modelo)
}
# Función para gráfico de dispersión con línea de regresión
grafico_dispersion <- function(datos) {
plot(datos$Concentration, datos$Emission, main = "Gráfico de Dispersión con Línea de Regresión",
xlab = "Concentration (μg/L)", ylab = "Emission (cps)", pch = 16, col = "blue")
abline(lm(Emission ~ Concentration, data = datos), col = "red")
}
# Función para graficar la matriz de correlación con valores de correlación
graficar_corrplot <- function(matriz_cor) {
corrplot(matriz_cor, sig.level = 0.05, type = "lower",
addCoef.col = "black")  # Agrega los valores de correlación en negro
}
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
prueba_correlacion(datos, "Concentration", "Emission")  # Prueba de correlación entre Concentration y Emission
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
prueba_correlacion(datos, "Concentration", "Emission")  # Prueba de correlación entre Concentration y Emission
# Uso de las funciones con los datos
matriz_cor <- calcular_correlacion(datos)    # Cálculo de correlación
regresion_lineal(datos)                      # Resumen de la regresión lineal
